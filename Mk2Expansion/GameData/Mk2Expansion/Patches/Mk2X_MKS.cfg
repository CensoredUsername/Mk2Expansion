//Adds MKS modules to M2X parts. Credit to Merkov for the patch.

@PART[M2X_DropshipCockpit]:NEEDS[KolonyTools]
//Makes the Dropship Cockpit a resource distributor like the karibou rover
{

	MODULE
	{
		name = ModuleResourceDistributor
	}

}

@PART[M2X_Reactor]:NEEDS[KolonyTools|Karbonite|FTT&!NearFutureElectrical]
//Removes M2X reactor modules and makes them MKS alike. Also edits flavor text
{

	@entryCost = 5000
	@cost = 50000
	@mass = 1.1
	@description = #LOC_Mk2X_MKS_description // #LOC_Mk2X_MKS_description = A compact nuclear reactor for interplanetary operations, spacecraft, stations, and surface bases. This reactor, in the Mk 2 formfactor, is completely compatible with USI models.
	@maxTemp = 3400
	@TechRequired:NEEDS[CommunityTechTree] = largeNuclearPower
	
	!MODULE[ModuleResourceConverter]{}

	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = #LOC_Mk2X_NTJ_decay_ConverterName // #LOC_Mk2X_NTJ_decay_ConverterName = Reactor
		StartActionName = #LOC_Mk2X_NTJ_decay_StartActionName // #LOC_Mk2X_NTJ_decay_StartActionName = Start Reactor
		StopActionName = #LOC_Mk2X_NTJ_decay_StopActionName // #LOC_Mk2X_NTJ_decay_StopActionName = Stop Reactor
		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.00000078
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.00000052
			DumpExcess = true		
		}
		OUTPUT_RESOURCE
		{
			ResourceName = XenonGas
			Ratio = 0.00000026
			DumpExcess = true		
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 230
			DumpExcess = false		
		}
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0 2000000
			key = 750 200000
			key = 1000 20000
			key = 1250 10000	
			key = 2000 200	
			key = 4000 0
		}				
		GeneratesHeat = true
		DefaultShutoffTemp = .8
		ThermalEfficiency 
		{
			key = 0 0 0 0
			key = 500 0.1 0 0
			key = 1000 1.0 0 0
			key = 1250 0.1 0 0
			key = 3000 0 0 0 
		}			
	}	
	
	@RESOURCE[EnrichedUranium]
	{
		@amount = 22
		@maxAmount = 22
	}
	
	@RESOURCE[DepletedFuel]
	{
		@amount = 22
		@maxAmount = 22
	}
	
	!RESOURCE[ElectricCharge]{}
	
	MODULE
	{
		name = USI_ModuleFieldRepair
	}
	
	@MODULE[ModuleCoreHeat]
	{
		@CoreTempGoal = 1000					//Internal temp goal - we don't transfer till we hit this point
		@CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		@CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		@CoreEnergyMultiplier = 0.1			//What percentage of our core energy do we transfer to the part
		@HeatRadiantMultiplier = 0.05		//If the core is hotter, how much heat radiates?
		@CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		@HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		@CoolantTransferMultiplier = 0.01	//If the part is colder, how much of our energy can we transfer?
		@radiatorCoolingFactor = 1			//How much energy we pull from core with an active radiator?  >= 1
		@radiatorHeatingFactor = 0.01		//How much energy we push to the active radiator
		@MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		@CoreShutdownTemp = 4000				//At what core temperature do we shut down all generators on this part?
		@MaxCoolant = 400					//Maximum amount of radiator capacity we can consume - 50 = 1 small
	}	
}
